# iOS aliases

## bootstrap
alias ios-bootstrap="sh ~/depop/depop-ios/Scripts/bootstrap_dependencies.sh && terminal-notifier -title 'ðŸ“² Bootstrap Dependencies' -message 'Finished'"

## run sourcery
alias sourcerify="sourcery --templates ~/Documents/Sourcery && cat Sourcery/Output.swift | pbcopy && rm Sourcery/Output.swift"

## start mock server
alias mockserver="sh ~/depop/depop-ios/Garage/DepopUITests/Base/mockserver/start_server.sh"

## open current design
alias design="open '$DESIGN'"

## run swiftlint autocorrect on diff since <commit or branch>
function swiftlint-since() {
    git diff --name-only $1 | grep '^.*\.swift$' | xargs swiftlint autocorrect
}

## open deeplink
function deeplink() {
    xcrun simctl openurl booted depop://$1
}

## delete all ios artifacts
function ios-nuke() {
    rm -rf /Users/$USER/Library/Developer/Xcode/DerivedData/ && \
    rm -rf /Users/$USER/Library/Caches/carthage && \
    rm -rf /Users/$USER/Library/Caches/Rome-swift* && \
    rm -rf /Users/$USER/Library/Caches/org.carthage.CarthageKit && \
    rm -rf $IOS/Carthage/Build/ && \
    cd $IOS && \
    sh ./Scripts/bootstrap_dependencies.sh && \
    open Depop.xcworkspace && \
    terminal-notifier -title 'ðŸ›  Deep clean xcode' -message 'Finished'
}

## xctest <scheme>
function xctest() {
	# if [ -z "$1" ]; then
	#   	SCHEME=$1
	# else 
	# 	SCHEME="Garage"
	# fi
	xcodebuild \
	  -workspace Depop.xcworkspace \
	  -scheme AppUI \
	  -only-testing 'AppUITests/EducationCarouselPresenterTests' \
	  -enableCodeCoverage YES \
	  -sdk iphonesimulator \
	  -destination 'platform=iOS Simulator,name=iPhone 11,OS=13.3' \
	  test | \
	  tee ~/Documents/xcodebuild_test.log | \
	  xcpretty --simple --color && \
	  terminal-notifier -title 'ðŸ›  xcodebuild test' -message 'Finished'
}